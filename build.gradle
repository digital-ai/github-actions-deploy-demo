plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'ai.digital'
version = '0.0.1'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Main Spring Boot jar
tasks.named('bootJar') {
	archiveBaseName.set("demo")
	archiveVersion.set("0.0.1")
}

// Create renamed copies of the bootJar output
tasks.register('demo002Jar', Jar) {
	dependsOn tasks.named('bootJar')
	archiveBaseName.set("demo")
	archiveVersion.set("0.0.2")
	from {
		zipTree(tasks.named('bootJar').get().archiveFile)
	}
	destinationDirectory.set(layout.buildDirectory.dir("libs"))
}

tasks.register('service1Jar', Jar) {
	dependsOn tasks.named('bootJar')
	archiveBaseName.set("service1")
	archiveVersion.set("0.0.1")
	from {
		zipTree(tasks.named('bootJar').get().archiveFile)
	}
	destinationDirectory.set(layout.buildDirectory.dir("libs"))
}

tasks.register('service2Jar', Jar) {
	dependsOn tasks.named('bootJar')
	archiveBaseName.set("service2")
	archiveVersion.set("0.0.1")
	from {
		zipTree(tasks.named('bootJar').get().archiveFile)
	}
	destinationDirectory.set(layout.buildDirectory.dir("libs"))
}

tasks.register('service3Jar', Jar) {
	dependsOn tasks.named('bootJar')
	archiveBaseName.set("service3")
	archiveVersion.set("0.0.1")
	from {
		zipTree(tasks.named('bootJar').get().archiveFile)
	}
	destinationDirectory.set(layout.buildDirectory.dir("libs"))
}

// Unified build task
tasks.register('buildAllJars') {
	dependsOn 'build', 'demo002Jar', 'service1Jar', 'service2Jar', 'service3Jar'
}
